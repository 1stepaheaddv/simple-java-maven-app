pipeline {
    agent {
         any{
            image 'maven:3.9.0'
            args '-v /root/.m2:/root/.m2'
        }
    }
    environment{
        SONARSERVER = 'sonarserver'
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        // stage('Test') {
        //     steps {
        //         sh 'mvn test'
        //     }
        //     post {
        //         always {
        //             junit 'target/surefire-reports/*.xml'
        //         }
        //     }
        // }
        // stage('SonarQube analysis') {
        //     steps {
        //         withSonarQubeEnv("${SONARSERVER}") {
        //             sh 'mvn clean package sonar:sonar'
        //             }
        //     }
        // }
        stage('Transfer to Artifactory') {
            steps {
                script {
                    def artifactoryServer = Artifactory.server('ArtifactoryServerID')
                   
                    def buildInfo = Artifactory.newBuildInfo()
                   
                    // Path to the WAR file generated by the build
                    def warFilePath = sh(returnStdout: true, script: 'find . -name "*.jar"').trim()
                   
                    // Upload the WAR file to Artifactory
                    artifactoryServer.upload spec: {
                        // The target repository in Artifactory
                        repoKey = 'my-repo'
                        // The path within the repository to store the WAR file
                        target = "path/to/store/war/${env.BUILD_NUMBER}/my-app.war"
                        // The source WAR file path
                        file = warFilePath
                    }, buildInfo: buildInfo
                }
            }
        }
    }
}
